{"ast":null,"code":"var _jsxFileName = \"D:\\\\documents\\\\freecodecamp\\\\mern-login-try\\\\frontend\\\\src\\\\context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport axios from 'axios';\nimport React from 'react'; //import reducer from './reducer';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/React.createContext();\n/*\r\nconst initialState = {\r\n  userInfo: localStorage.getItem('userInfo')\r\n    ? JSON.parse(localStorage.getItem('userInfo'))\r\n    : null,\r\n}; */\n\nconst AppProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [loading, setLoading] = React.useState(false); // const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  const [userInfo, setUserInfo] = React.useState(localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null);\n  /*\r\n  const login = (userInfo) => {\r\n  dispatch({ type: 'LOGIN', payload: userInfo });\r\n  };\r\n  const signout = () => {\r\n  dispatch({ type: 'SIGNOUT' });\r\n  };\r\n  */\n\n  /* const findJobs = async (userId) => {\r\n  setLoading(true);\r\n  try {\r\n    const jobs = await axios.get(`/api/v1/users/getjob/${userId}`);\r\n    console.log(jobs);\r\n    setLoading(false);\r\n  } catch (err) {\r\n    setLoading(false);\r\n    console.log(err.message);\r\n  }\r\n  //alert(jobToFind.position);\r\n  };\r\n  */\n\n  /*</AppContext.Provider><AppContext.Provider\r\n      value={{ ...state, loading, setLoading, login, signout, findJob }}\r\n    >*/\n\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      userInfo,\n      setUserInfo,\n      loading,\n      setLoading\n    },\n    children: [\" \", children, \" \", ' ', \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 14\n  }, this);\n};\n\n_s(AppProvider, \"uxEuZ9b8DcFkyPzL/dBnxrRFlk4=\");\n\n_c = AppProvider;\n\nconst useGlobalContext = () => {\n  _s2();\n\n  return React.useContext(AppContext);\n};\n\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { AppProvider, useGlobalContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["axios","React","AppContext","createContext","AppProvider","children","loading","setLoading","useState","userInfo","setUserInfo","localStorage","getItem","JSON","parse","useGlobalContext","useContext"],"sources":["D:/documents/freecodecamp/mern-login-try/frontend/src/context.js"],"sourcesContent":["import axios from 'axios';\r\nimport React from 'react';\r\n//import reducer from './reducer';\r\n\r\nconst AppContext = React.createContext();\r\n\r\n/*\r\nconst initialState = {\r\n  userInfo: localStorage.getItem('userInfo')\r\n    ? JSON.parse(localStorage.getItem('userInfo'))\r\n    : null,\r\n}; */\r\n\r\nconst AppProvider = ({ children }) => {\r\n    const [loading, setLoading] = React.useState(false);\r\n    // const [state, dispatch] = React.useReducer(reducer, initialState);\r\n    const [userInfo, setUserInfo] = React.useState(\r\n        localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo')) :\r\n        null\r\n    );\r\n    /*\r\n  const login = (userInfo) => {\r\n    dispatch({ type: 'LOGIN', payload: userInfo });\r\n  };\r\n\r\n  const signout = () => {\r\n    dispatch({ type: 'SIGNOUT' });\r\n  };\r\n*/\r\n    /* const findJobs = async (userId) => {\r\n    setLoading(true);\r\n    try {\r\n      const jobs = await axios.get(`/api/v1/users/getjob/${userId}`);\r\n      console.log(jobs);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setLoading(false);\r\n      console.log(err.message);\r\n    }\r\n    //alert(jobToFind.position);\r\n  };\r\n*/\r\n    /*</AppContext.Provider><AppContext.Provider\r\n        value={{ ...state, loading, setLoading, login, signout, findJob }}\r\n      >*/\r\n\r\n    return ( <\r\n        AppContext.Provider value = {\r\n            { userInfo, setUserInfo, loading, setLoading } } > { children } { ' ' } <\r\n        /AppContext.Provider>\r\n    );\r\n};\r\n\r\nconst useGlobalContext = () => {\r\n    return React.useContext(AppContext);\r\n};\r\n\r\nexport { AppProvider, useGlobalContext };"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;;AAEA,MAAMC,UAAU,gBAAGD,KAAK,CAACE,aAAN,EAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,WAAW,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAClC,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,KAAK,CAACO,QAAN,CAAe,KAAf,CAA9B,CADkC,CAElC;;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,KAAK,CAACO,QAAN,CAC5BG,YAAY,CAACC,OAAb,CAAqB,UAArB,IACAC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADA,GAEA,IAH4B,CAAhC;EAKA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;EAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACI;AACJ;AACA;;EAEI,oBAAS,QACL,UADK,CACM,QADN;IACe,KAAK,EACrB;MAAEH,QAAF;MAAYC,WAAZ;MAAyBJ,OAAzB;MAAkCC;IAAlC,CAFC;IAAA,gBAEoDF,QAFpD,OAEiE,GAFjE;EAAA;IAAA;IAAA;IAAA;EAAA,QAAT;AAKH,CAvCD;;GAAMD,W;;KAAAA,W;;AAyCN,MAAMW,gBAAgB,GAAG,MAAM;EAAA;;EAC3B,OAAOd,KAAK,CAACe,UAAN,CAAiBd,UAAjB,CAAP;AACH,CAFD;;IAAMa,gB;;AAIN,SAASX,WAAT,EAAsBW,gBAAtB"},"metadata":{},"sourceType":"module"}